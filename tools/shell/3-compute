#!/bin/bash
source common

set -eu

usage() {
  echo "Usage: $0 [options]"
  echo "Options:"
  echo "      --stop          Stop the compute instance"
  echo "      --vanilla       Run vanilla neon compute"
  exit 1
}

stop_only=0
vanilla=0

while (( "$#" )); do
  case "$1" in
    --stop)
      stop_only=1
      shift 1
      ;;
    --vanilla)
      vanilla=1
      shift 1
      ;;
    -h|--help)
      usage
      ;;
    *) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      usage
      ;;
  esac
done

echo "Stopping any previous compute instance"
kill $(cat logs/compute.pid) || true
pkill postgres || true

if [ $stop_only -eq 1 ]; then
    exit 0
fi

if [ $vanilla -eq 0 ]; then
  spec_template=./spec-template.json
else
  spec_template=./spec-template-vanilla.json
fi
spec=./spec.json

echo "Waiting pageserver become ready."
while ! nc -z ${PS_ADDRESSES[$REGION_ID]} 6400; do
    sleep 1;
done
echo "Page server is ready."

tenant_id=$(curl -s http://${PS_ADDRESSES[$REGION_ID]}:9898/v1/tenant/ | jq -r '.[0].id')
if [ $tenant_id = "null" ]; then
    echo "ERROR: Tenant id is null"
    exit 1
fi

timelines=$(curl -s http://${PS_ADDRESSES[$REGION_ID]}:9898/v1/tenant/${tenant_id}/timeline/)

if [ $vanilla -eq 0 ]; then
  region_id_to_timeline_id=$(echo ${timelines} | jq '[.[] | {key: .region_id, value: .timeline_id}] | from_entries')
  timeline_id=$(echo ${region_id_to_timeline_id} | jq -r ".[\"${REGION_ID}\"]")
else
  timeline_id=$(echo ${timelines} | jq -r '.[0].timeline_id')
fi

if [ $timeline_id = "null" ]; then
    echo "ERROR: Timeline id is null"
    exit 1
fi

echo "Region id: ${REGION_ID}"
echo "Tenant id: ${tenant_id}"
echo "Timeline id: ${timeline_id}"

echo "Overwrite variables in spec file"
sed "s/TENANT_ID/${tenant_id}/" ${spec_template} > ${spec}
sed -i "s/TIMELINE_ID/${timeline_id}/" ${spec}
sed -i "s/SAFEKEEPERS_ADDR/${SK_ADDRESSES[$REGION_ID]}:5454/" ${spec}
sed -i "s/PAGESERVER_ADDR/${PS_ADDRESSES[$REGION_ID]}/" ${spec}
sed -i "s/REGION/${REGION_ID}/" ${spec}

cat ${spec}

run compute "$NEON_DIR/target/release/compute_ctl --pgdata $DATA/compute    \
    -C "postgresql://cloud_admin@localhost:55433/postgres"                  \
    -b $NEON_DIR/pg_install/v14/bin/postgres                                \
    -S ${spec}"