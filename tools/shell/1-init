#!/bin/bash

set -e

source common

usage () {
  echo "Usage: $0 [options] <num_regions>"
  echo "Options:"
  echo "      --signal-file   The file that signifies the data is ready"
  echo "      --vanilla       Run vanilla neon"
  echo "      --hub-addr      The hub address"
  exit 1
}

vanilla=0
signal_file=.done
hub_addr=localhost

while (( "$#" )); do
  case "$1" in
    --signal-file)
      signal_file=$2
      shift 2
      ;;
    --vanilla)
      vanilla=1
      shift 1
      ;;
    --hub-addr)
      hub_addr=$2
      shift 2
      ;;
    -h|--help)
      usage
      ;;
    *)
      break
      ;;
  esac
done

if [ $# -ne 1 ]; then
  usage
fi

num_regions=$1

echo "Initializing Neon cluster with $num_regions regions"

# Generate the base data for the cluster
mkdir -p init
if [ $vanilla -eq 0 ]; then
  python3 $XACTSERVER_DIR/tools/neonctl.py  \
    --neon-dir $NEON_DIR                    \
    --xactserver-dir $XACTSERVER_DIR        \
    create ./init                           \
    --num-regions $num_regions
else
  python3 $XACTSERVER_DIR/tools/neonctl.py    \
    --neon-dir $NEON_DIR                      \
    --xactserver-dir $XACTSERVER_DIR          \
    create ./init                             \
    --num-regions $num_regions                \
    --pageserver-config 'control_plane_api=""'
fi

# Wait until minio is ready then upload the data
until (mc alias set minio http://$hub_addr:9000 minioadmin minioadmin) do
  echo 'Waiting to start minio...' && sleep 1
done
mc mb --ignore-existing minio/sunstorm
mc rm -r --force minio/sunstorm/.neon
mc cp -r ./init/r0/.neon minio/sunstorm/
touch ./init/$signal_file
mc cp ./init/$signal_file minio/sunstorm/.neon/
