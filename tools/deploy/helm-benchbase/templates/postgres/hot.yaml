{{ if eq .Values.benchmark "hot" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: benchbase-config
  labels:
    app: benchbase-config
    benchmark: hot
    part-of: benchbase
data:
  config.xml: |
    <?xml version="1.0"?>
    <parameters>

        <!-- Connection details -->
        <type>POSTGRES</type>
        <driver>org.postgresql.Driver</driver>
        <url>jdbc:postgresql://compute:55433/postgres?sslmode=disable&amp;ApplicationName=ycsb&amp;reWriteBatchedInserts=true</url>
        <username>cloud_admin</username>
        <password></password>
        <isolation>TRANSACTION_SERIALIZABLE</isolation>
        <batchsize>128</batchsize>

        <ddlpath>/config/ddl.sql</ddlpath>

        <!-- Scalefactor in YCSB is *1000 the number of rows in the USERTABLE-->
        <scalefactor>{{ .Values.scalefactor }}</scalefactor>
        
        <!-- Optional: Override the field size for each column in USERTABLE -->
        <fieldSize>8</fieldSize>
        <!-- Optional: Number of hot keys per partition -->
        <hot>{{ .Values.hot }}</hot>

        <!-- Number of regions, excluding the global region -->
        <numRegions>{{ sub (len .Values.regions) 1 }}</numRegions>
        <region>{{ include "regionId" . }}</region>
        <!-- Percentage of multi-region transactions -->
        <mrpct>{{ .Values.mrpct }}</mrpct>

        <!-- The workload -->
        <terminals>{{ .Values.terminals }}</terminals>
        <works>
            <work>
                <time>{{ .Values.time }}</time>
                <rate>{{ .Values.rate }}</rate>
                <weights>100,0</weights>
            </work>
        </works>

        <!-- HOT Procedures declaration -->
        <transactiontypes>
            <transactiontype>
                <name>ReadModifyWrite</name>
            </transactiontype>
            <transactiontype>
                <name>RMWLocalRORemote</name>
            </transactiontype>
        </transactiontypes>
    </parameters>

  ddl.sql: |
    CREATE EXTENSION IF NOT EXISTS remotexact;
    DROP TABLE IF EXISTS usertable;
    CREATE TABLE usertable (
        ycsb_key int PRIMARY KEY,
        field1   text,
        field2   text,
        field3   text,
        field4   text,
        field5   text,
        field6   text,
        field7   text,
        field8   text,
        field9   text,
        field10  text
    ) PARTITION BY RANGE (ycsb_key);

    {{ $numRows := (mul .Values.scalefactor 1000) }}
    {{ $numRegions := (sub (len .Values.regions) 1) }}
    {{- $numRowsPerRegion := (div $numRows $numRegions) }}
    {{- range $i := until (int $numRegions) }}
    {{- $from := (mul $i $numRowsPerRegion) }}
    {{- $to := (add $from $numRowsPerRegion) }}
    CREATE TABLE usertable_{{ add1 $i }} PARTITION OF usertable FOR VALUES FROM ({{ $from }}) TO ({{ $to }});
    {{- end }}

    {{- range $i := until (int $numRegions) }}
    UPDATE pg_class SET relregion = {{ add1 $i }} WHERE relname = 'usertable_{{ add1 $i }}';
    UPDATE pg_class SET relregion = {{ add1 $i }} WHERE relname = 'usertable_{{ add1 $i }}_pkey';
    {{- end }}
{{ end }}