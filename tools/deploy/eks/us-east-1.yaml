# eksctl create cluster -f eks/us-east-1.yaml
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: neon
  region: us-east-1

vpc:
  subnets:
    public:
      us-east-1a: { id: subnet-01ffdf1e8d2d11bce }
      us-east-1b: { id: subnet-0f2ae7a9189cd2786 }
      us-east-1c: { id: subnet-0346cab72850ef316 }

managedNodeGroups:
  - name: servers
    instanceType: c5.4xlarge
    desiredCapacity: 2
    securityGroups:
      attachIDs:
        - sg-018aeab319579349c
    labels:
      role: server
    tags:
      role: server
  - name: hub
    subnets:
      - us-east-1a
    instanceType: c5.4xlarge
    desiredCapacity: 1
    securityGroups:
      attachIDs:
        - sg-018aeab319579349c
    labels:
      role: hub
      region: us-east-1
  - name: safekeepers
    instanceType: c5.2xlarge
    desiredCapacity: 1
    securityGroups:
      attachIDs:
        - sg-018aeab319579349c
    labels:
      role: safekeeper
      region: us-east-1
  - name: clients
    instanceType: c5.2xlarge
    desiredCapacity: 1
    securityGroups:
      attachIDs:
        - sg-018aeab319579349c
    labels:
      role: client
      region: us-east-1

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: ebs-csi-controller-sa
        namespace: kube-system
      roleName: AmazonEKS_EBS_CSI_DriverRole
      roleOnly: true
      wellKnownPolicies:
        ebsCSIController: true

addons:
  - name: aws-ebs-csi-driver
    serviceAccountRoleARN: arn:aws:iam::970400548469:role/AmazonEKS_EBS_CSI_DriverRole
